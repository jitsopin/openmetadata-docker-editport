
 
version: "3.9"
 
# ---------- Networks ----------

networks:

  data_net:

    driver: bridge
 
# ---------- Volumes ----------

volumes:

  om_mysql_data:

  om_es_data:

  marquez_db_data:
 
services:
 
  # =======================

  # Marquez (OpenLineage)

  # =======================

  marquez-db:

    image: postgres:14

    container_name: marquez-db

    environment:

      # Postgres credentials for Marquez

      POSTGRES_USER: marquez

      POSTGRES_PASSWORD: marquez

      POSTGRES_DB: marquez

    volumes:

      - marquez_db_data:/var/lib/postgresql/data

    networks: [data_net]
 
  marquez-api:

    image: marquezproject/marquez:latest

    container_name: marquez-api

    environment:

      # Marquez server port inside container

      MARQUEZ_PORT: 5000

      # JDBC connection to Postgres service (same Docker network)

      MARQUEZ_DB: "jdbc:postgresql://marquez-db:5432/marquez"

      MARQUEZ_DB_USER: "marquez"

      MARQUEZ_DB_PASSWORD: "marquez"

    depends_on:

      - marquez-db

    # Expose to host only if you want to call API from outside Docker.

    # Change host-side port to avoid conflicts.

    ports:

      - "5500:5000"   # Host:5500 -> Container:5000 (API)

    networks: [data_net]

    healthcheck:

      # Simple HTTP health check

      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:5000/api/v1/namespaces"]

      interval: 20s

      timeout: 5s

      retries: 10
 
  marquez-web:

    image: marquezproject/marquez-web:latest

    container_name: marquez-web

    environment:

      # Point web to the API service name in the same network

      MARQUEZ_BASE_URL: http://marquez-api:5000

    depends_on:

      - marquez-api

    ports:

      - "5300:3000"   # Host:5300 -> Container:3000 (Web UI)

    networks: [data_net]
 
  # =======================

  # OpenMetadata stack

  # =======================

  openmetadata-mysql:

    image: docker.getcollate.io/openmetadata/db:1.10.1

    container_name: openmetadata_mysql

    command: "--sort_buffer_size=10M"

    environment:

      MYSQL_ROOT_PASSWORD: password

    # Map MySQL to 3307 on host to avoid clashing with local MySQL

    ports:

      - "3307:3306"

    volumes:

      - om_mysql_data:/var/lib/mysql

    networks: [data_net]

    healthcheck:

      test: ["CMD-SHELL", "mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --silent --execute 'SELECT 1'"]

      interval: 15s

      timeout: 10s

      retries: 10
 
  openmetadata-elasticsearch:

    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.4

    container_name: openmetadata_elasticsearch

    environment:

      - discovery.type=single-node

      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m

      - xpack.security.enabled=false

    # Use 9203/9303 to avoid common 9200/9300 conflicts

    ports:

      - "9203:9200"

      - "9303:9300"

    volumes:

      - om_es_data:/usr/share/elasticsearch/data

    networks: [data_net]

    healthcheck:

      test: ["CMD-SHELL", "curl -sf http://localhost:9200/_cluster/health | grep -qE 'green|yellow'"]

      interval: 15s

      timeout: 10s

      retries: 10
 
  openmetadata-server:

    image: docker.getcollate.io/openmetadata/server:1.10.1

    container_name: openmetadata_server

    restart: always

    environment:

      # Keep defaults; adjust as needed

      OPENMETADATA_CLUSTER_NAME: openmetadata

      SERVER_PORT: 8585

      SERVER_ADMIN_PORT: 8586

      LOG_LEVEL: INFO
 
      # DB connection (using the MySQL service name)

      DB_DRIVER_CLASS: com.mysql.cj.jdbc.Driver

      DB_SCHEME: mysql

      DB_PARAMS: allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC

      DB_USER: openmetadata_user

      DB_USER_PASSWORD: openmetadata_password

      DB_HOST: openmetadata-mysql

      DB_PORT: 3306

      OM_DATABASE: openmetadata_db
 
      # Elasticsearch connection (use internal service name)

      ELASTICSEARCH_HOST: openmetadata-elasticsearch

      ELASTICSEARCH_PORT: 9200

      ELASTICSEARCH_SCHEME: http

      SEARCH_TYPE: elasticsearch
 
      # Web config

      WEB_CONF_URI_PATH: /api

    depends_on:

      openmetadata-mysql:

        condition: service_healthy

      openmetadata-elasticsearch:

        condition: service_healthy

    # Publish only main UI/admin ports

    ports:

      - "8585:8585"

      - "8586:8586"

    networks: [data_net]

    healthcheck:

      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8586/healthcheck"]

      interval: 20s

      timeout: 5s

      retries: 15
 
  # Keep an always-on ingestion worker container you can exec into.

  openmetadata-ingestion:

    image: docker.getcollate.io/openmetadata/ingestion:1.10.1

    container_name: openmetadata_ingestion

    depends_on:

      - openmetadata-server

    entrypoint: ["/bin/sh", "-c"]

    # Sleep to keep the container alive for on-demand runs

    command: ["sleep infinity"]

    networks: [data_net]

    # Mount local folder with ingestion recipes

    volumes:

      - ./ingestion:/ingestion:ro

 
